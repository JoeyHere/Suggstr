c
params
c
params
c
User.third.completed_queued_list.count
c
User.third.completed_queued_list.count
User.third.completed_queued_list
c
User.third.completed_queued_list.count
User.third.completed_queued_list
c
QueuedMedium.where(completed:true).count
QueuedMedium.where(completed:true)
c
QueuedMedium.where(completed:true).count
QueuedMedium.where(completed:true)
QueuedMedia.find_by(completed:true)
QueuedMedia.find(completed:true)
QueuedMedia.where(completed:true)
Queued_medium.where(completed:true)
params
RatingRecord.all
c
params
exit
params
c
@rating_record
c
@queued_medium
@medium
c
RatingRecord.find_by(user_id: @user.id, medium_id: medium.id)
medium
c
@rating_record
c
RatingRecord.find_by(user_id: @user.id, medium_id: medium.id)
@user
medium = @completed_media.first
@completed_media
c
RatingRecord.where(user_id:64)
RatingRecord.find_by(user_id:64)
User.third
RatingRecord.find_by(user_id:User.third.id)
RatingRecord.last
c
RatingRecord.find_by(user_id:User.third.id)
User.third.id
RatingRecord.find(user_id:User.third.id)
c
User.find(64)
params
c
User.find(45)
RatingRecord.all
User.third
Medium.find(11940)
RatingRecord.find_by(user_id:User.third.id)
@completed_media
@media
c
@queued_medium
c
cc
user
@user
category_list(type)
category_list(type).size
type
sub_list
@@types
c
@user.sub_list("Movie")
@user.sub_list("Movies")
@user
@user.sub_list("Top List")
@user.sort_by_time(@user.sub_list("Top List"))
@user
c
params
c
params
c
@user
@medium
c
queued_list
c
self.sub_list("Movie")
self.sub_list(medium_up.type.name)
medium_up.type.name
self
queued_list
c
@@types
c
current_user
current_user = User.find(session[:current_user_id])
current_user = User.find_by_id(session[:current_user_id])
session[:current_user_id] = @user.id
@user.id
session
@user
@user = User.last
User.last
USer.last
c
@user.id
@user
clear
cleae
c
session[:user_name]
session[:user]
session[:user_id]
session
c
params[:suggestion][:message]
params[:message]
params
c
session.to_json_with_active_support_encoder
session.methods
session.class
session.all
session.length
session
params
c
params[:utf8]
params
c
params
c
params
c
params[:email]
params
c
params
session[:user_id]
session[user_id]
params[:user_id]
session
params[:session][:user_id]
params[:session]
params[:session][:user]
params[:user]
c
@user.received_suggestions
exit
params
exit
params
exit
params
exit
c
sub_category
c
sub_category
c
params[:name]
User.find_by(email: params[:session][:email])
params[:session][:password]
params[:password]
params[:session][:email]
params
c
exit
c
exit
rating_history
self.rating_records
c
self.rating_records
RatingRecord.all
rating_history
c
rating_history
c
RatingRecord.all
RatingRecord.last
c
rating_history
c
rating_history
c
rating_history
exit
self.rating_records
rating_history
c
rating_history
c
rating_history
c
@newrating
params
c
params
c
rating_history
c
rating_history
c
rating_history
exit
rating_history
rating_history[category]
c
medium.rating_records.select{|rr| rr.rated_score == category}.count
medium.rating_records.select{|rr| rr.rated_score == category}
category
medium.rating_records.find_by(rated_score: category).count
medium.rating_records.find_by(rated_score: category)
medium.rating_records.find_all(rated_score: category)
medium.rating_records.count(rated_score: category)
medium.rating_records.find(rate_score: category)
category
medium.rating_records.count(rate_score: category)
medium.rating_records.count(rate_score: category))
medium.rating_records.count(category)
medium.rating_records.count
medium.rating_records
medium,rating_records
medium = Medium.find(6596)
rating_history
rating_history[category]=2
category = RatingRecord.categories.first
c
RatingRecord.categories.first
RatingRecord.categories
total
c
@completed_media
@media.count
@media
@meida
c
@queued_medium
QueuedMedium.find(params[:id])
params[:id]
QueuedMedium.find(45)
QueuedMedium.all
QueuedMedia.all
params
@queued_medium
c
current_user
@media
c
